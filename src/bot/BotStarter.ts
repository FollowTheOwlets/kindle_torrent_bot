import {Scenes, session, Telegraf} from 'telegraf';
import {UserRepo} from '../repo/UserRepo.js';
import {TorrentSeenRepo} from '../repo/TorrentSeenRepo.js';
import {MailService} from '../services/MailService.js';
import {TorrentService} from '../services/TorrentService.js';
import {InstructionScene} from '../scenes/InstructionScene.js';
import {EpubScene} from '../scenes/EpubScene.js';
import {TorrentScene} from '../scenes/TorrentScene.js';
import {ILogger} from '../core/types.js';

/**
 * BotStarter ‚Äî —Ç–æ—á–∫–∞ —Å–±–æ—Ä–∫–∏ Telegram-–±–æ—Ç–∞: –ø–æ–¥–∫–ª—é—á–∞–µ—Ç —Å—Ü–µ–Ω—ã, –∫–æ–º–∞–Ω–¥—ã
 * –∏ –Ω–∞–≤–µ—à–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (–æ–±—Å–µ—Ä–≤–µ—Ä—ã) –Ω–∞ —Å–æ–±—ã—Ç–∏—è Telegraf.
 *
 * @example
 * const starter = new BotStarter(token, users, seen, mail, torrent, logger);
 * starter.attachObservers();
 * await starter.launch();
 */
export class BotStarter {
    private bot: Telegraf<Scenes.SceneContext>;

    /**
     * @param {string} token –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞.
     * @param {UserRepo} users –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π (tgId ‚Üí email).
     * @param {TorrentSeenRepo} seen –£—á–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —Ç–æ—Ä—Ä–µ–Ω—Ç–æ–≤.
     * @param {MailService} mail –ü–æ—á—Ç–æ–≤—ã–π —Å–µ—Ä–≤–∏—Å.
     * @param {TorrentService} torrent –¢–æ—Ä—Ä–µ–Ω—Ç-—Å–µ—Ä–≤–∏—Å.
     * @param {ILogger} logger –õ–æ–≥–≥–µ—Ä.
     */
    constructor(
        token: string,
        private readonly users: UserRepo,
        private readonly seen: TorrentSeenRepo,
        private readonly mail: MailService,
        private readonly torrent: TorrentService,
        private readonly logger: ILogger
    ) {
        this.bot = new Telegraf<Scenes.SceneContext>(token, {
            handlerTimeout: Infinity,
        });
    }

    /**
     * –ü–æ–¥–∫–ª—é—á–∞–µ—Ç —Å—Ü–µ–Ω—ã, –∫–æ–º–∞–Ω–¥—ã –∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π Telegraf.
     * –í—ã–∑—ã–≤–∞—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏.
     */
    attachObservers() {
        const stage = new Scenes.Stage<Scenes.SceneContext>([
            InstructionScene(this.users),
            EpubScene(this.users, this.mail),
            TorrentScene(this.users, this.seen, this.mail, this.torrent),
        ]);

        this.bot.use(session());
        this.bot.use(stage.middleware());

        this.bot.start(async (ctx) => {
            const hasEmail = !!this.users.getEmail(ctx.from!.id);
            if (!hasEmail) return ctx.scene.enter('instruction');
            await ctx.reply('üëã –ü—Ä–∏–≤–µ—Ç! –ö–æ–º–∞–Ω–¥—ã: /epub, /torrent, /help');
        });

        this.bot.command('help', async (ctx) => {
            await ctx.reply('–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n/epub ‚Äî —Ä–µ–∂–∏–º –æ—Ç–ø—Ä–∞–≤–∫–∏ .epub\n/torrent ‚Äî —Ä–µ–∂–∏–º –æ–±—Ä–∞–±–æ—Ç–∫–∏ .torrent\n/instruction ‚Äî –∑–∞–¥–∞—Ç—å –∏–ª–∏ —Å–º–µ–Ω–∏—Ç—å email\n/cancel ‚Äî –≤—ã–π—Ç–∏ –∏–∑ —Ç–µ–∫—É—â–µ–π —Å—Ü–µ–Ω—ã');
        });

        this.bot.command('instruction', (ctx) => ctx.scene.enter('instruction'));
        this.bot.command('epub', (ctx) => ctx.scene.enter('epub'));
        this.bot.command('torrent', (ctx) => ctx.scene.enter('torrent'));

        // –ü–æ–¥—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: –µ—Å–ª–∏ email –Ω–µ –∑–∞–¥–∞–Ω ‚Äî –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –ø—Ä–∏ –ª—é–±–æ–º –¥–æ–∫—É–º–µ–Ω—Ç–µ
        this.bot.on('document', async (ctx) => {
            if (!this.users.getEmail(ctx.from!.id)) {
                await ctx.scene.enter('instruction');
            }
        });
    }

    /**
     * –ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç SMTP (–º—è–≥–∫–æ).
     * @returns {Promise<void>}
     */
    async launch() {
        await this.mail.verify().catch((e) => {
            this.logger.error('SMTP verify failed (–ø—Ä–æ–¥–æ–ª–∂–∏–º –ø–æ–ø—ã—Ç–∫—É –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ)', e);
        });
        await this.bot.launch();
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ —Å –ø—Ä–∏—á–∏–Ω–æ–π.
     * @param {string} reason –ü—Ä–∏—á–∏–Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (–ª–æ–≥).
     */
    stop(reason: string) {
        this.bot.stop(reason);
    }

    /**
     * –î–æ—Å—Ç—É–ø –∫ ¬´—Å—ã—Ä–æ–º—É¬ª –∏–Ω—Å—Ç–∞–Ω—Å—É Telegraf (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–ª—è —Ç–µ—Å—Ç–æ–≤/—Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π).
     */
    get raw() {
        return this.bot;
    }
}
